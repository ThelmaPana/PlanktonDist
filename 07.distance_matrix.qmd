---
title: "Build an interaction matrix from Kuiper statistic values."
author: "Thelma Panaïotis"
format: 
  html:
    toc: true
    embed-resources: true
editor: visual
lightbox: true
execute:
  warning: false
  cache: true
  freeze: false
---

```{r set_up}
#| cache: false
source("utils.R")
```

## Read saved scores

Read saved scores for both intra and inter distances and keep only relevant columns.

```{r load}
# Intra scores
load("data/06b.df_intra_scores.Rdata")
# Inter scores
load("data/06c.df_inter_scores.Rdata")

# Plankton subsample, to get a complete list of taxonomic groups
load("data/00.plankton_sub.Rdata")
taxa <- plankton_sub %>% 
  select(taxon) %>% 
  distinct() %>% 
  arrange(taxon) %>% 
  filter(!taxon %in% c("Rhizaria", "Collodaria_colonial")) %>% 
  pull(taxon)
```

Assemble intra and inter scores.

```{r assemble}
# Intra
df_intra_mat <- df_intra_scores %>% 
  select(t1 = taxon, t2 = taxon, kuiper_stat, z_score, dir, sig) %>% 
  filter(sig) # Keep only significant interactions

# Inter
df_inter_mat <- df_inter_scores %>% 
  select(pair, kuiper_stat, z_score, dir, sig) %>% 
  filter(sig) %>% # Keep only significant interactions
  separate_wider_delim(pair, delim = "-", names = c("t1", "t2"))
# and generate reverse of t1 / t2
#df_inter_mat_bis <- df_inter_mat %>% rename(t2 = t1, t1 = t2)

# Store all together
df_pairs <- df_intra_mat %>% 
  bind_rows(df_inter_mat)# %>% 
  #bind_rows(df_inter_mat_bis)
```

## Build the matrix

```{r mat}
#| fig-column: body-outset
#| out-width: 100%

# Create all combination of taxa and join scores
df_mat_ks <- crossing(t1 = taxa, t2 = taxa) %>% 
  filter(t1 <= t2) %>% 
  left_join(df_pairs, by = join_by(t1, t2))


# Plot Kuiper stat and Z-score
ggplot(df_mat_ks) +
  geom_raster(aes(x = t1, y = t2, fill = kuiper_stat, alpha = z_score)) +
  geom_text(data = df_mat_ks %>% filter(dir == "further"), aes(x = t1, y = t2), label = "×") +
  scale_fill_viridis_c(na.value = NA) +
  labs(fill = "Kuiper\nstatistic", alpha = "Z-score") +
  theme_classic() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1, size = 7),
    axis.text.y = element_text(size = 7),
    axis.title.x = element_blank(),
    axis.title.y = element_blank()
  ) + 
  coord_fixed()
```

Plot Z-score.

```{r mat_z}
ggplot(df_mat_ks) +
  geom_raster(aes(x = t1, y = t2, fill = z_score)) +
  geom_text(data = df_mat_ks %>% filter(dir == "further"), aes(x = t1, y = t2), label = "×") +
  scale_fill_viridis_c(na.value = NA) +
  labs(fill = "Z-score") +
  theme_classic() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1, size = 7),
    axis.text.y = element_text(size = 7),
    axis.title.x = element_blank(),
    axis.title.y = element_blank()
  ) + 
  coord_fixed()
```

This time let’s plot the matrix with the direction of the interaction.

```{r mat_dir}
#| fig-column: body-outset
#| out-width: 100%

# Plot direction and Z-score
ggplot(df_mat_ks) +
  geom_raster(aes(x = t1, y = t2, fill = dir, alpha = z_score)) +
  scale_fill_manual(values = c("#67a9cf", "#ef8a62"), na.value = NA) +
  labs(fill = "Direction", alpha = "Z-score") +
  theme_classic() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    axis.title.x = element_blank(),
    axis.title.y = element_blank()
  ) + 
  coord_fixed()
```

## Reformat and save

Kuiper statistic.

```{r save}
#| fig-column: body-outset
#| out-width: 100%

# Keep only taxa and interaction strength.
# Standardise intercation strength between -1 and 1, and assign negative values for organisms further away than expected.
df_mat_ks <- df_mat_ks %>% 
  mutate(
    # standardise between 0 and 1
    int_dist = (
      kuiper_stat - min(kuiper_stat, na.rm = TRUE)) / 
      (max(kuiper_stat, na.rm = TRUE) - min(kuiper_stat, na.rm = TRUE)),
    # assign negative values for avoidance
    int_dist = ifelse(dir == "further", -int_dist, int_dist)
    ) %>% 
  select(t1, t2, int_dist)

ggplot(df_mat_ks) +
  geom_tile(aes(x = t1, y = t2, fill = int_dist)) +
  scale_fill_gradient2(low = "#ef8a62", high = "#67a9cf", na.value = NA) +
  labs(x = "Taxon 1", y = "Taxon 2", fill = "Dist\nint.") +
  coord_fixed() +
  theme_classic() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

# Save it
save(df_mat_ks, file = "data/07.distance_matrix.Rdata")
```

Z-score.

```{r save_z}
##| fig-column: body-outset
##| out-width: 100%
#
## Keep only taxa and Z-score
## Standardise intercation strength between -1 and 1, and assign negative values for organisms #further away than expected.
#df_mat_ks <- df_mat_ks %>% 
#  mutate(
#    # standardise between 0 and 1
#    int_dist = (
#      z_score - min(z_score, na.rm = TRUE)) / 
#      (max(z_score, na.rm = TRUE) - min(z_score, na.rm = TRUE)),
#    # assign negative values for avoidance
#    int_dist = ifelse(dir == "further", -int_dist, int_dist)
#    ) %>% 
#  select(t1, t2, int_dist)
#
#ggplot(df_mat_ks) +
#  geom_tile(aes(x = t1, y = t2, fill = int_dist)) +
#  scale_fill_gradient2(low = "#ef8a62", high = "#67a9cf", na.value = NA) +
#  labs(x = "Taxon 1", y = "Taxon 2", fill = "Dist\nint.") +
#  coord_fixed() +
#  theme_classic() +
#  theme(axis.text.x = element_text(angle = 45, hjust = 1))
#
## Save it
#save(df_mat_ks, file = "data/07.distance_matrix.Rdata")
```
