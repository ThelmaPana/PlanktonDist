---
title: "Build an interaction matrix from Kuiper statistic values."
author: "Thelma Pana√Øotis"
format: 
  html:
    toc: true
    embed-resources: true
editor: visual
lightbox: true
execute:
  warning: false
  cache: true
  freeze: false
---

```{r set_up}
#| cache: false
source("utils.R")
```

## Read saved scores

Read saved scores for both intra and inter distances and keep only relevant columns.

```{r load}
# Intra scores
load("data/04c.df_intra_scores_small.Rdata")
df_intra_scores <- df_intra_scores %>% 
  select(t1 = taxon, t2 = taxon, test_stat, z_score, dir, above)
# Inter scores
load("data/05c.df_inter_scores_small.Rdata")
df_inter_scores <- df_inter_scores %>% 
  select(pair, test_stat, z_score, dir, above)
```

Assemble intra and inter scores. But first we need to compute average of both pairs A-B and B-A.

```{r assemble}
# Average within pairs for inter
df_inter_scores <- df_inter_scores %>% 
  separate_wider_delim(pair, delim = " - ", names = c("t1", "t2")) 

# Average within pairs for inter
df_inter_scores <- df_inter_scores %>% 
  # make both A-B and B-A as A-B
  mutate(pair = ifelse(
    t1 < t2, 
    paste0(t1, " - ", t2), 
    paste0(t2, " - ", t1)
  ), .before = t1) %>% 
  # for each pair, compute average of test_stat, z_score and aboveness
  group_by(pair) %>% 
  summarise(
    test_stat = mean(test_stat),
    z_score = mean(z_score),
    # both A-B and B-A should have the same direction, otherwide set it to NA
    dir = ifelse(length(unique(dir)) == 1, unique(dir), NA),
    # both A-B and B-A should be above to consider the pair as above
    above = all(above) 
  ) %>% 
  # regenerate taxa from pair
  separate_wider_delim(pair, delim = " - ", names = c("t1", "t2"), cols_remove = FALSE)
# and generate reverse of t1 / t2
df_inter_scores_bis <- df_inter_scores %>% rename(t2 = t1, t1 = t2)

## Bind together intra and inter
df_all <- df_intra_scores %>% 
  bind_rows(df_inter_scores) %>% 
  bind_rows(df_inter_scores_bis)

# List taxa
taxa <- df_all %>% select(t1) %>% unique() %>% pull(t1)
```

## Build the matrix

```{r mat}
#| fig-column: body-outset
#| out-width: 100%

# Create all combination of taxa and join scores
df_mat <- crossing(t1 = taxa, t2 = taxa) %>% 
  left_join(df_all %>% select(-pair) %>% filter(above), by = join_by(t1, t2))

# Plot Kuiper stat and Z-score
ggplot(df_mat) +
  geom_raster(aes(x = t1, y = t2, fill = test_stat, alpha = z_score)) +
  scale_fill_viridis_c(na.value = NA) +
  labs(fill = "Kuiper\nstatistic", alpha = "Z-score") +
  theme_classic() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    axis.title.x = element_blank(),
    axis.title.y = element_blank()
  ) + 
  coord_fixed()

# Plot direction and Z-score
ggplot(df_mat) +
  geom_raster(aes(x = t1, y = t2, fill = dir, alpha = z_score)) +
  scale_fill_manual(values = c("#67a9cf", "#ef8a62"), na.value = NA) +
  labs(fill = "Direction", alpha = "Z-score") +
  theme_classic() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    axis.title.x = element_blank(),
    axis.title.y = element_blank()
  ) + 
  coord_fixed()

```
